/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './app';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from './TestGridDataService';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../src/services/GridDataService';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '../src/components/AwGrid';
import * as import12 from '../src/services/SelectService';
import * as import13 from '../src/services/GridReactiveServices';
import * as import14 from '../src/components/AwGrid.ngfactory';
import * as import15 from '../src/services/SortingService';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '@angular/common/src/pipes/async_pipe';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/common/src/directives/ng_for';
export class Wrapper_TestApp {
  /*private*/ _eventHandler:Function;
  context:import0.TestApp;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.TestApp();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TestApp_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_TestApp_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.TestApp>;
  _TestApp_0_3:Wrapper_TestApp;
  __GridDataServiceBase_0_4:import5.TestGridDataService;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestApp_Host0,renderType_TestApp_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  get _GridDataServiceBase_0_4():import5.TestGridDataService {
    if ((this.__GridDataServiceBase_0_4 == null)) { (this.__GridDataServiceBase_0_4 = new import5.TestGridDataService()); }
    return this.__GridDataServiceBase_0_4;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'test-app',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TestApp0(this.viewUtils,this,0,this._el_0);
    this._TestApp_0_3 = new Wrapper_TestApp();
    this.compView_0.create(this._TestApp_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TestApp_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TestApp) && (0 === requestNodeIndex))) { return this._TestApp_0_3.context; }
    if (((token === import9.GridDataServiceBase) && (0 === requestNodeIndex))) { return this._GridDataServiceBase_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TestApp_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TestAppNgFactory:import8.ComponentFactory<import0.TestApp> = new import8.ComponentFactory<import0.TestApp>('test-app',View_TestApp_Host0,import0.TestApp);
const styles_TestApp:any[] = ([] as any[]);
var renderType_TestApp:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_TestApp,{});
export class View_TestApp0 extends import1.AppView<import0.TestApp> {
  _viewQuery_AwGrid_0:import10.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  compView_4:import1.AppView<import11.AwGrid>;
  _SelectService_4_3:import12.SelectService;
  _ReactiveGridService_4_4:import13.ReactiveGridService;
  _AwGrid_4_5:import14.Wrapper_AwGrid;
  __SortingService_4_6:import15.SortingService;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import16.ViewContainer;
  _TemplateRef_9_5:any;
  _NgFor_9_6:import17.Wrapper_NgFor;
  _text_10:any;
  _text_11:any;
  _arr_21:any;
  _pipe_async_0:import18.AsyncPipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestApp0,renderType_TestApp,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._arr_21 = import3.pureProxy2((p0:any,p1:any):any[] => {
      return [
        p0,
        p1
      ]
      ;
    });
  }
  get _SortingService_4_6():import15.SortingService {
    if ((this.__SortingService_4_6 == null)) { (this.__SortingService_4_6 = new import15.SortingService()); }
    return this.__SortingService_4_6;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_AwGrid_0 = new import10.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Refresh',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,parentRenderNode,'aw-grid',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import14.View_AwGrid0(this.viewUtils,this,4,this._el_4);
    this._SelectService_4_3 = new import12.SelectService();
    this._ReactiveGridService_4_4 = new import13.ReactiveGridService(this.parentView.injectorGet(import9.GridDataServiceBase,this.parentIndex),this._SelectService_4_3);
    this._AwGrid_4_5 = new import14.Wrapper_AwGrid(this._ReactiveGridService_4_4,this._SelectService_4_3);
    this._text_5 = this.renderer.createText((null as any),'\n	',(null as any));
    this.compView_4.create(this._AwGrid_4_5.context);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'style','height: 400px'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n		',(null as any));
    this._anchor_9 = this.renderer.createTemplateAnchor(this._el_7,(null as any));
    this._vc_9 = new import16.ViewContainer(9,7,this,this._anchor_9);
    this._TemplateRef_9_5 = new import19.TemplateRef_(this,9,this._anchor_9);
    this._NgFor_9_6 = new import17.Wrapper_NgFor(this._vc_9.vcRef,this._TemplateRef_9_5,this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.ref);
    this._text_10 = this.renderer.createText(this._el_7,'\n	',(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'onSelect',(null as any)),this.eventHandler(this.handleEvent_4));
    this._AwGrid_4_5.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    this._pipe_async_0 = new import18.AsyncPipe(this.ref);
    this._viewQuery_AwGrid_0.reset([this._AwGrid_4_5.context]);
    this.context.grid = this._viewQuery_AwGrid_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._anchor_9,
      this._text_10,
      this._text_11
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.SelectService) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._SelectService_4_3; }
    if (((token === import13.ReactiveGridService) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._ReactiveGridService_4_4; }
    if (((token === import11.AwGrid) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._AwGrid_4_5.context; }
    if (((token === import15.SortingService) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._SortingService_4_6; }
    if (((token === import19.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import21.NgFor) && (9 === requestNodeIndex))) { return this._NgFor_9_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import7.ValueUnwrapper();
    const currVal_4_0_0:any = '1';
    this._AwGrid_4_5.check_idField(currVal_4_0_0,throwOnChange,false);
    const currVal_4_0_1:any = this.context.colsDef;
    this._AwGrid_4_5.check_columnsDef(currVal_4_0_1,throwOnChange,false);
    const currVal_4_0_2:any = 60;
    this._AwGrid_4_5.check_pageSize(currVal_4_0_2,throwOnChange,false);
    const currVal_4_0_3:any = '400px';
    this._AwGrid_4_5.check_height(currVal_4_0_3,throwOnChange,false);
    const currVal_4_0_4:any = 1;
    this._AwGrid_4_5.check_selectionMode(currVal_4_0_4,throwOnChange,false);
    const currVal_4_0_5:any = this._arr_21('0-41','0-11');
    this._AwGrid_4_5.check_selected(currVal_4_0_5,throwOnChange,false);
    if (this._AwGrid_4_5.ngDoCheck(this,this._el_4,throwOnChange)) { this.compView_4.markAsCheckOnce(); }
    valUnwrapper.reset();
    const currVal_9_0_0:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.logs));
    this._NgFor_9_6.check_ngForOf(currVal_9_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgFor_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    this.compView_4.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._AwGrid_4_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_9.destroyNestedViews();
    this.compView_4.destroy();
    this._AwGrid_4_5.ngOnDestroy();
    this._pipe_async_0.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 9)) { return new View_TestApp1(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.refresh()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSelect')) {
      const pd_sub_0:any = ((<any>this.context.onSelect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_TestApp1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_TestApp1,renderType_TestApp,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'\n			',this.context.$implicit,'\n		');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}